{"version":3,"file":"static/js/117.77c743f7.chunk.js","mappings":"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","sources":["components/API/Api.jsx","webpack://react-homework-template/./src/components/Pages/Styles/Movies.module.css?069f","components/Pages/Movies.jsx"],"sourcesContent":["// import axios from 'axios';\n\n// const API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export const getTrendingMovies = async () => {\n//   const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n//   return response.data.results;\n// };\n\nimport axios from 'axios';\nconst API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({ baseURL: BASE_URL, timeout: 10000 });\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get(\n      `/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\nexport const searchMovies = async query => {\n  try {\n    const response = await axiosInstance.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching details for movie ${movieId}:`, error);\n    return null;\n  }\n};\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(`Error fetching credits for movie ${movieId}:`, error);\n    return [];\n  }\n};\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error fetching reviews for movie ${movieId}:`, error);\n    return [];\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieSearch\":\"Movies_movieSearch__hu+8x\",\"searchForm\":\"Movies_searchForm__sbbAK\",\"searchInput\":\"Movies_searchInput__GacC2\",\"searchButton\":\"Movies_searchButton__aCnFG\",\"moviesList\":\"Movies_moviesList__JgTu8\",\"movieItem\":\"Movies_movieItem__qh1nf\",\"moviePoster\":\"Movies_moviePoster__QbbDJ\",\"noResult\":\"Movies_noResult__KBz17\",\"loadingMessage\":\"Movies_loadingMessage__q+mPd\",\"errorMessage\":\"Movies_errorMessage__+Yms-\"};","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { searchMovies } from 'components/API/Api';\nimport {useSearchParams, Link } from 'react-router-dom';\nimport { SearchHistoryContext } from 'components/SearchHistory/SearchHistory';\nimport styles from './Styles/Movies.module.css';\nimport noImage from '../images/noimg.png';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { addSearchTerm } = useContext(SearchHistoryContext);\n\n\n  const fetchMovies = useCallback(async (searchQuery) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const results = await searchMovies(searchQuery);\n      setMovies(results);\n      addSearchTerm(searchQuery);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to fetch search results.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [addSearchTerm]);\n\n\n  useEffect(() => {\n    const queryParam = searchParams.get('query') || '';\n    setQuery(queryParam);\n    if (queryParam) {\n      fetchMovies(queryParam);\n    }\n  }, [searchParams, fetchMovies]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n\n  return (\n    <div className={styles.movieSearch}>\n    <form onSubmit={handleSearch} className={styles.searchForm}>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        placeholder=\"Search movies\"\n        className={styles.searchInput}\n      />\n      <button type=\"submit\" className={styles.searchButton}>Search</button>\n    </form>\n    {loading && <p className={styles.loadingMessage}>Loading...</p>}\n    {error && <p className={styles.errorMessage}>{error}</p>}\n    <ul className={styles.moviesList}>\n      {movies.length > 0 ? (\n        movies.map(movie => (\n          <li key={movie.id} className={styles.movieItem}>\n            <Link to={`/movies/${movie.id}`}>\n              <img\n                src={movie.poster_path ? `${IMAGE_BASE_URL}${movie.poster_path}` : noImage}\n                alt={movie.title}\n                className={styles.moviePoster}\n              />\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        ))\n      ) : (\n        !loading && <li className={styles.noResult}>No movies found</li>\n      )}\n    </ul>\n  </div>\n);\n};\n\nexport default Movies;\n\n// const Movies = () => (\n//   <div>\n//     <h2>Movies Page</h2>\n//     <p>If you see this, the component is being rendered.</p>\n//   </div>\n// );\n\n// export default Movies;\n\n"],"names":["API_KEY","axiosInstance","axios","create","baseURL","timeout","getTrendingMovies","async","get","data","results","error","console","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Movies","setQuery","useState","movies","setMovies","loading","setLoading","setError","searchParams","setSearchParams","useSearchParams","addSearchTerm","useContext","SearchHistoryContext","fetchMovies","useCallback","searchQuery","err","useEffect","queryParam","_jsxs","className","styles","children","onSubmit","e","preventDefault","_jsx","type","value","onChange","target","placeholder","length","map","movie","Link","to","id","src","poster_path","noImage","alt","title"],"sourceRoot":""}