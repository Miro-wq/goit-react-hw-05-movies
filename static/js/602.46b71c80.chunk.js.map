{"version":3,"file":"static/js/602.46b71c80.chunk.js","mappings":"mMAWA,MAAMA,EAAU,mCAGVC,EAAgBC,EAAAA,EAAMC,OAAO,CAAEC,QAFpB,+BAEuCC,QAAS,MAEpDC,EAAoBC,UAC/B,IAIE,aAHuBN,EAAcO,IAClC,+BAA8BR,MAEjBS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAM,kCAAmCA,GAC1C,EACT,GAEWE,EAAeN,UAC1B,IAIE,aAHuBN,EAAcO,IAClC,yBAAwBR,WAAiBc,MAE5BL,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAM,0BAA2BA,GAClC,EACT,GAEWI,EAAkBR,UAC7B,IAIE,aAHuBN,EAAcO,IAClC,UAASQ,aAAmBhB,MAEfS,IAClB,CAAE,MAAOE,GAEP,OADAC,QAAQD,MAAO,oCAAmCK,KAAYL,GACvD,IACT,GAEWM,EAAkBV,UAC7B,IAIE,aAHuBN,EAAcO,IAClC,UAASQ,qBAA2BhB,MAEvBS,KAAKS,IACvB,CAAE,MAAOP,GAEP,OADAC,QAAQD,MAAO,oCAAmCK,KAAYL,GACvD,EACT,GAEWQ,EAAkBZ,UAC7B,IAIE,aAHuBN,EAAcO,IAClC,UAASQ,qBAA2BhB,MAEvBS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAO,oCAAmCK,KAAYL,GACvD,EACT,E,qFCjEF,MAgCA,EAhCaS,KACX,MAAM,QAAEJ,IAAYK,EAAAA,EAAAA,MACbH,EAAMI,IAAWC,EAAAA,EAAAA,UAAS,KAC1BZ,EAAOa,IAAYD,EAAAA,EAAAA,UAAS,MAenC,OAbAE,EAAAA,EAAAA,YAAU,KACUlB,WAChB,IACE,MAAMmB,QAAkBT,EAAAA,EAAAA,IAAgBD,GACxCM,EAAQI,EACV,CAAE,MAAOC,GACPf,QAAQD,MAAMgB,GACdH,EAAS,gCACX,GAEFI,EAAW,GACV,CAACZ,IAEAL,GAAckB,EAAAA,EAAAA,KAAA,OAAAC,SAAMnB,IACJ,IAAhBO,EAAKa,QAAqBF,EAAAA,EAAAA,KAAA,OAAAC,SAAK,gBAGjCD,EAAAA,EAAAA,KAAA,MAAAC,SACGZ,EAAKc,KAAIC,IACRC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CACGG,EAAME,KAAK,OAAKF,EAAMG,YADhBH,EAAMI,OAId,C","sources":["components/API/Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["// import axios from 'axios';\n\n// const API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export const getTrendingMovies = async () => {\n//   const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n//   return response.data.results;\n// };\n\nimport axios from 'axios';\nconst API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({ baseURL: BASE_URL, timeout: 10000 });\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get(\n      `/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\nexport const searchMovies = async query => {\n  try {\n    const response = await axiosInstance.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching details for movie ${movieId}:`, error);\n    return null;\n  }\n};\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(`Error fetching credits for movie ${movieId}:`, error);\n    return [];\n  }\n};\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error fetching reviews for movie ${movieId}:`, error);\n    return [];\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'components/API/Api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const movieCast = await getMovieCredits(movieId);\n        setCast(movieCast);\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch cast details.\");\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  if (error) return <div>{error}</div>;\n  if (cast.length === 0) return <div>Loading...</div>;\n\n  return (\n    <ul>\n      {cast.map(actor => (\n        <li key={actor.id}>\n          {actor.name} as {actor.character}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n\n"],"names":["API_KEY","axiosInstance","axios","create","baseURL","timeout","getTrendingMovies","async","get","data","results","error","console","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Cast","useParams","setCast","useState","setError","useEffect","movieCast","err","fetchCast","_jsx","children","length","map","actor","_jsxs","name","character","id"],"sourceRoot":""}