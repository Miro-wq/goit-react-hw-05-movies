{"version":3,"file":"static/js/143.dc2e9563.chunk.js","mappings":"mMAWA,MAAMA,EAAU,mCAGVC,EAAgBC,EAAAA,EAAMC,OAAO,CAAEC,QAFpB,+BAEuCC,QAAS,MAEpDC,EAAoBC,UAC/B,IAIE,aAHuBN,EAAcO,IAClC,+BAA8BR,MAEjBS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAM,kCAAmCA,GAC1C,EACT,GAEWE,EAAeN,UAC1B,IAIE,aAHuBN,EAAcO,IAClC,yBAAwBR,WAAiBc,MAE5BL,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAM,0BAA2BA,GAClC,EACT,GAEWI,EAAkBR,UAC7B,IAIE,aAHuBN,EAAcO,IAClC,UAASQ,aAAmBhB,MAEfS,IAClB,CAAE,MAAOE,GAEP,OADAC,QAAQD,MAAO,oCAAmCK,KAAYL,GACvD,IACT,GAEWM,EAAkBV,UAC7B,IAIE,aAHuBN,EAAcO,IAClC,UAASQ,qBAA2BhB,MAEvBS,KAAKS,IACvB,CAAE,MAAOP,GAEP,OADAC,QAAQD,MAAO,oCAAmCK,KAAYL,GACvD,EACT,GAEWQ,EAAkBZ,UAC7B,IAIE,aAHuBN,EAAcO,IAClC,UAASQ,qBAA2BhB,MAEvBS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAO,oCAAmCK,KAAYL,GACvD,EACT,E,4EClEF,MA+CA,EA/CeS,KACb,MAAON,EAAOO,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCX,EAAOgB,IAAYL,EAAAA,EAAAA,UAAS,MAiBnC,OACEM,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAjBWvB,UACnBwB,EAAEC,iBACFN,GAAW,GACXC,EAAS,MACT,IACE,MAAMjB,QAAgBG,EAAAA,EAAAA,IAAaC,GACnCU,EAAUd,EACZ,CAAE,MAAOuB,GACPrB,QAAQD,MAAMsB,GACdN,EAAS,kCACX,CAAC,QACCD,GAAW,EACb,GAK+BG,SAAA,EAC3BK,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOtB,EACPuB,SAAUN,GAAKV,EAASU,EAAEO,OAAOF,OACjCG,YAAY,mBAEdL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQN,SAAC,cAEvBJ,IAAWS,EAAAA,EAAAA,KAAA,KAAAL,SAAG,eACdlB,IAASuB,EAAAA,EAAAA,KAAA,KAAAL,SAAIlB,KACduB,EAAAA,EAAAA,KAAA,MAAAL,SACGN,EAAOiB,OAAS,EACfjB,EAAOkB,KAAIC,IACTR,EAAAA,EAAAA,KAAA,MAAAL,SAAoBa,EAAMC,OAAjBD,EAAME,OAGhBnB,IAAWS,EAAAA,EAAAA,KAAA,MAAAL,SAAI,wBAGhB,C","sources":["components/API/Api.jsx","components/Pages/Movies.jsx"],"sourcesContent":["// import axios from 'axios';\n\n// const API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export const getTrendingMovies = async () => {\n//   const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n//   return response.data.results;\n// };\n\nimport axios from 'axios';\nconst API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({ baseURL: BASE_URL, timeout: 10000 });\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get(\n      `/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\nexport const searchMovies = async query => {\n  try {\n    const response = await axiosInstance.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching details for movie ${movieId}:`, error);\n    return null;\n  }\n};\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(`Error fetching credits for movie ${movieId}:`, error);\n    return [];\n  }\n};\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error fetching reviews for movie ${movieId}:`, error);\n    return [];\n  }\n};\n","import React, { useState } from 'react';\nimport { searchMovies } from 'components/API/Api';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const results = await searchMovies(query);\n      setMovies(results);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to fetch search results.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <ul>\n        {movies.length > 0 ? (\n          movies.map(movie => (\n            <li key={movie.id}>{movie.title}</li>\n          ))\n        ) : (\n          !loading && <li>No movies found</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axiosInstance","axios","create","baseURL","timeout","getTrendingMovies","async","get","data","results","error","console","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Movies","setQuery","useState","movies","setMovies","loading","setLoading","setError","_jsxs","children","onSubmit","e","preventDefault","err","_jsx","type","value","onChange","target","placeholder","length","map","movie","title","id"],"sourceRoot":""}