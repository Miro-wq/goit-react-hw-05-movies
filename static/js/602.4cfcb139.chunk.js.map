{"version":3,"file":"static/js/602.4cfcb139.chunk.js","mappings":"mMAWA,MAAMA,EAAU,mCAGVC,EAAgBC,EAAAA,EAAMC,OAAO,CAAEC,QAFpB,+BAEuCC,QAAS,MAEpDC,EAAoBC,UAC/B,IAIE,aAHuBN,EAAcO,IAClC,+BAA8BR,MAEjBS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAM,kCAAmCA,GAC1C,EACT,GAEWE,EAAeN,UAC1B,IAIE,aAHuBN,EAAcO,IAClC,yBAAwBR,WAAiBc,MAE5BL,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAM,0BAA2BA,GAClC,EACT,GAEWI,EAAkBR,UAC7B,IAIE,aAHuBN,EAAcO,IAClC,UAASQ,aAAmBhB,MAEfS,IAClB,CAAE,MAAOE,GAEP,OADAC,QAAQD,MAAO,oCAAmCK,KAAYL,GACvD,IACT,GAEWM,EAAkBV,UAC7B,IAIE,aAHuBN,EAAcO,IAClC,UAASQ,qBAA2BhB,MAEvBS,KAAKS,IACvB,CAAE,MAAOP,GAEP,OADAC,QAAQD,MAAO,oCAAmCK,KAAYL,GACvD,EACT,GAEWQ,EAAkBZ,UAC7B,IAIE,aAHuBN,EAAcO,IAClC,UAASQ,qBAA2BhB,MAEvBS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAO,oCAAmCK,KAAYL,GACvD,EACT,E,qFCjEF,MAwCA,EAtCaS,KACX,MAAM,QAAEJ,IAAYK,EAAAA,EAAAA,MACbH,EAAMI,IAAWC,EAAAA,EAAAA,UAAS,IAejC,OAbAC,EAAAA,EAAAA,YAAU,KACUjB,WAChB,IACE,MAAMkB,QAAiBR,EAAAA,EAAAA,IAAgBD,GACvCM,EAAQG,EACV,CAAE,MAAOd,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,GAGFe,EAAW,GACV,CAACV,KAGFW,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,QAAS,OAAQC,SAAU,OAAQC,IAAK,OAAQC,UAAW,OAAQC,QAAS,GAAIC,SAC1FhB,EAAKiB,OAAS,EACbjB,EAAKkB,KAAIC,IACPC,EAAAA,EAAAA,MAAA,MAAmBV,MAAO,CAAEW,MAAO,QAASC,UAAW,UAAWN,SAAA,EAChEP,EAAAA,EAAAA,KAAA,OACEc,IAAKJ,EAAMK,aAAgB,kCAAmBL,EAAMK,eAAiB,sCACrEC,IAAKN,EAAMO,KACXhB,MAAO,CAAEW,MAAO,OAAQM,aAAc,UAExClB,EAAAA,EAAAA,KAAA,KAAAO,UAAGP,EAAAA,EAAAA,KAAA,UAAAO,SAASG,EAAMO,UAClBN,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,MAAIG,EAAMS,eAPNT,EAAMU,OAWjBpB,EAAAA,EAAAA,KAAA,KAAAO,SAAG,oCAEF,C","sources":["components/API/Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["// import axios from 'axios';\n\n// const API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export const getTrendingMovies = async () => {\n//   const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n//   return response.data.results;\n// };\n\nimport axios from 'axios';\nconst API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({ baseURL: BASE_URL, timeout: 10000 });\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get(\n      `/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\nexport const searchMovies = async query => {\n  try {\n    const response = await axiosInstance.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching details for movie ${movieId}:`, error);\n    return null;\n  }\n};\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(`Error fetching credits for movie ${movieId}:`, error);\n    return [];\n  }\n};\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error fetching reviews for movie ${movieId}:`, error);\n    return [];\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'components/API/Api';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castData = await getMovieCredits(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error('Failed to fetch cast details:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <ul style={{ display: 'flex', flexWrap: 'wrap', gap: '20px', listStyle: 'none', padding: 0 }}>\n      {cast.length > 0 ? (\n        cast.map(actor => (\n          <li key={actor.id} style={{ width: '150px', textAlign: 'center' }}>\n            <img\n              src={actor.profile_path ? `${IMAGE_BASE_URL}${actor.profile_path}` : 'https://via.placeholder.com/150x225'}\n              alt={actor.name}\n              style={{ width: '100%', borderRadius: '8px' }}\n            />\n            <p><strong>{actor.name}</strong></p>\n            <p>as {actor.character}</p>\n          </li>\n        ))\n      ) : (\n        <p>No cast information available.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axiosInstance","axios","create","baseURL","timeout","getTrendingMovies","async","get","data","results","error","console","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Cast","useParams","setCast","useState","useEffect","castData","fetchCast","_jsx","style","display","flexWrap","gap","listStyle","padding","children","length","map","actor","_jsxs","width","textAlign","src","profile_path","alt","name","borderRadius","character","id"],"sourceRoot":""}