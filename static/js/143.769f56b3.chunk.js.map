{"version":3,"file":"static/js/143.769f56b3.chunk.js","mappings":"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","sources":["components/API/Api.jsx","components/Pages/Movies.jsx"],"sourcesContent":["// import axios from 'axios';\n\n// const API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export const getTrendingMovies = async () => {\n//   const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n//   return response.data.results;\n// };\n\nimport axios from 'axios';\nconst API_KEY = 'd934da8882e5322d29af0f8a1ae42476';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({ baseURL: BASE_URL, timeout: 10000 });\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get(\n      `/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\nexport const searchMovies = async query => {\n  try {\n    const response = await axiosInstance.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching details for movie ${movieId}:`, error);\n    return null;\n  }\n};\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(`Error fetching credits for movie ${movieId}:`, error);\n    return [];\n  }\n};\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axiosInstance.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error fetching reviews for movie ${movieId}:`, error);\n    return [];\n  }\n};\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { searchMovies } from 'components/API/Api';\n// import styles from '../Pages/Styles/Movies.module.css';\nimport {useSearchParams, Link } from 'react-router-dom';\nimport { SearchHistoryContext } from 'components/SearchHistory/SearchHistory';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { addSearchTerm } = useContext(SearchHistoryContext);\n\n\n  const fetchMovies = useCallback(async (searchQuery) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const results = await searchMovies(searchQuery);\n      setMovies(results);\n      addSearchTerm(searchQuery);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to fetch search results.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [addSearchTerm]);\n\n\n  useEffect(() => {\n    const queryParam = searchParams.get('query') || '';\n    setQuery(queryParam);\n    if (queryParam) {\n      fetchMovies(queryParam);\n    }\n  }, [searchParams, fetchMovies]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <ul>\n        {movies.length > 0 ? (\n          movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                <img\n                  src={movie.poster_path ? `${IMAGE_BASE_URL}${movie.poster_path}` : 'https://via.placeholder.com/500x750'}\n                  alt={movie.title}\n                  style={{ width: '150px', height: '225px' }}\n                />\n                <p>{movie.title}</p>\n              </Link>\n            </li>\n          ))\n        ) : (\n          !loading && <li>No movies found</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n\n// const Movies = () => (\n//   <div>\n//     <h2>Movies Page</h2>\n//     <p>If you see this, the component is being rendered.</p>\n//   </div>\n// );\n\n// export default Movies;\n\n"],"names":["API_KEY","axiosInstance","axios","create","baseURL","timeout","getTrendingMovies","async","get","data","results","error","console","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Movies","setQuery","useState","movies","setMovies","loading","setLoading","setError","searchParams","setSearchParams","useSearchParams","addSearchTerm","useContext","SearchHistoryContext","fetchMovies","useCallback","searchQuery","err","useEffect","queryParam","_jsxs","children","onSubmit","e","preventDefault","_jsx","type","value","onChange","target","placeholder","length","map","movie","Link","to","id","src","poster_path","alt","title","style","width","height"],"sourceRoot":""}